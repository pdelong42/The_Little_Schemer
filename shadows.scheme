(define numbered?
   (lambda
      (aexp)
      (cond
         (  (atom?   aexp)
            (number? aexp)
         )
         (else
            (and
               (numbered? (car           aexp))
               (numbered? (car (cdr (cdr aexp))))
            )
         )
      )
   )
)

(define value
   (lambda
      (nexp)
      (cond
         (  (atom? nexp) nexp)
         (  (eq?
               (car (cdr nexp))
               (quote +)
            )
            (+
               (value (car nexp))
               (value (car (cdr (cdr nexp))))
            )
         )
         (  (eq?
               (car (cdr nexp))
               (quote x)
            )
            (*
               (value (car nexp))
               (value (car (cdr (cdr nexp))))
            )
         )
         (else
            (expt
               (value (car nexp))
               (value (car (cdr (cdr nexp))))
            )
         )
      )
   )
)
